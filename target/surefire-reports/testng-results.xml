<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="18" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="87" started-at="2017-11-16T03:35:13Z" finished-at="2017-11-16T03:35:13Z">
    <groups>
      <group name="pqr">
        <method signature="xTest.c4()[pri:0, instance:com.login.xTest@96532d6]" name="c4" class="com.login.xTest"/>
      </group> <!-- pqr -->
      <group name="a">
        <method signature="ZTest.a1()[pri:0, instance:com.login.ZTest@67b64c45]" name="a1" class="com.login.ZTest"/>
        <method signature="ZTest.a2()[pri:0, instance:com.login.ZTest@67b64c45]" name="a2" class="com.login.ZTest"/>
        <method signature="ZTest.a3()[pri:0, instance:com.login.ZTest@67b64c45]" name="a3" class="com.login.ZTest"/>
      </group> <!-- a -->
      <group name="B">
        <method signature="BTest.b1()[pri:0, instance:com.login.BTest@506e6d5e]" name="b1" class="com.login.BTest"/>
        <method signature="BTest.b2()[pri:0, instance:com.login.BTest@506e6d5e]" name="b2" class="com.login.BTest"/>
        <method signature="BTest.b3()[pri:0, instance:com.login.BTest@506e6d5e]" name="b3" class="com.login.BTest"/>
      </group> <!-- B -->
      <group name="c">
        <method signature="xTest.c2()[pri:0, instance:com.login.xTest@96532d6]" name="c2" class="com.login.xTest"/>
        <method signature="xTest.c3()[pri:0, instance:com.login.xTest@96532d6]" name="c3" class="com.login.xTest"/>
        <method signature="xTest.c4()[pri:0, instance:com.login.xTest@96532d6]" name="c4" class="com.login.xTest"/>
        <method signature="xTest.z1()[pri:1, instance:com.login.xTest@96532d6]" name="z1" class="com.login.xTest"/>
      </group> <!-- c -->
      <group name="smoke">
        <method signature="BTest.b1()[pri:0, instance:com.login.BTest@506e6d5e]" name="b1" class="com.login.BTest"/>
        <method signature="ZTest.a3()[pri:0, instance:com.login.ZTest@67b64c45]" name="a3" class="com.login.ZTest"/>
        <method signature="xTest.c2()[pri:0, instance:com.login.xTest@96532d6]" name="c2" class="com.login.xTest"/>
        <method signature="xTest.c5()[pri:0, instance:com.login.xTest@96532d6]" name="c5" class="com.login.xTest"/>
      </group> <!-- smoke -->
      <group name="xyz">
        <method signature="xTest.c2()[pri:0, instance:com.login.xTest@96532d6]" name="c2" class="com.login.xTest"/>
      </group> <!-- xyz -->
    </groups>
    <test name="Command line test" duration-ms="87" started-at="2017-11-16T03:35:13Z" finished-at="2017-11-16T03:35:13Z">
      <class name="com.login.ZTest">
        <test-method status="PASS" signature="aaa()[pri:0, instance:com.login.ZTest@67b64c45]" name="aaa" is-config="true" duration-ms="2" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aaa -->
        <test-method status="PASS" signature="a1()[pri:0, instance:com.login.ZTest@67b64c45]" name="a1" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="a2()[pri:0, instance:com.login.ZTest@67b64c45]" name="a2" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a2 -->
        <test-method status="PASS" signature="a3()[pri:0, instance:com.login.ZTest@67b64c45]" name="a3" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a3 -->
        <test-method status="PASS" signature="aa1()[pri:0, instance:com.login.ZTest@67b64c45]" name="aa1" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aa1 -->
        <test-method status="PASS" signature="xx()[pri:0, instance:com.login.ZTest@67b64c45]" name="xx" is-config="true" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xx -->
        <test-method status="PASS" signature="demo()[pri:0, instance:com.login.ZTest@67b64c45]" name="demo" is-config="true" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- com.login.ZTest -->
      <class name="com.login.BTest">
        <test-method status="PASS" signature="demo()[pri:0, instance:com.login.BTest@506e6d5e]" name="demo" is-config="true" duration-ms="14" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="b1()[pri:0, instance:com.login.BTest@506e6d5e]" name="b1" duration-ms="2" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b1 -->
        <test-method status="PASS" signature="m1()[pri:0, instance:com.login.BTest@506e6d5e]" name="m1" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="PASS" signature="m2()[pri:0, instance:com.login.BTest@506e6d5e]" name="m2" is-config="true" duration-ms="2" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="PASS" signature="m1()[pri:0, instance:com.login.BTest@506e6d5e]" name="m1" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="FAIL" signature="t2()[pri:0, instance:com.login.BTest@506e6d5e]" name="t2" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.login.BTest.t2(BTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t2 -->
        <test-method status="PASS" signature="m2()[pri:0, instance:com.login.BTest@506e6d5e]" name="m2" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="PASS" signature="m1()[pri:0, instance:com.login.BTest@506e6d5e]" name="m1" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="PASS" signature="b2()[pri:0, instance:com.login.BTest@506e6d5e]" name="b2" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b2 -->
        <test-method status="PASS" signature="m2()[pri:0, instance:com.login.BTest@506e6d5e]" name="m2" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="PASS" signature="m1()[pri:0, instance:com.login.BTest@506e6d5e]" name="m1" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="PASS" signature="b3()[pri:0, instance:com.login.BTest@506e6d5e]" name="b3" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b3 -->
        <test-method status="PASS" signature="m2()[pri:0, instance:com.login.BTest@506e6d5e]" name="m2" is-config="true" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="SKIP" signature="t1()[pri:0, instance:com.login.BTest@506e6d5e]" name="t1" duration-ms="0" started-at="2017-11-16T09:05:13Z" depends-on-methods="com.login.BTest.t2" finished-at="2017-11-16T09:05:13Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BTest.t1()[pri:0, instance:com.login.BTest@506e6d5e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BTest.t1()[pri:0, instance:com.login.BTest@506e6d5e] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
      </class> <!-- com.login.BTest -->
      <class name="com.login.LoginTest">
        <test-method status="PASS" signature="bothNull()[pri:0, instance:com.login.LoginTest@3796751b]" name="bothNull" duration-ms="14" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothNull -->
        <test-method status="PASS" signature="invalidLogin()[pri:0, instance:com.login.LoginTest@3796751b]" name="invalidLogin" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="PASS" signature="passwordNull()[pri:0, instance:com.login.LoginTest@3796751b]" name="passwordNull" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordNull -->
        <test-method status="PASS" signature="usernameNull()[pri:0, instance:com.login.LoginTest@3796751b]" name="usernameNull" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usernameNull -->
        <test-method status="FAIL" signature="validLogin()[pri:0, instance:com.login.LoginTest@3796751b]" name="validLogin" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Login Successful] but found [Login Failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Login Successful] but found [Login Failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.login.LoginTest.validLogin(LoginTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
      </class> <!-- com.login.LoginTest -->
      <class name="com.login.xTest">
        <test-method status="PASS" signature="xx()[pri:0, instance:com.login.xTest@96532d6]" name="xx" is-config="true" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xx -->
        <test-method status="PASS" signature="c2()[pri:0, instance:com.login.xTest@96532d6]" name="c2" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c2 -->
        <test-method status="PASS" signature="c3()[pri:0, instance:com.login.xTest@96532d6]" name="c3" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c3 -->
        <test-method status="PASS" signature="c4()[pri:0, instance:com.login.xTest@96532d6]" name="c4" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c4 -->
        <test-method status="PASS" signature="c5()[pri:0, instance:com.login.xTest@96532d6]" name="c5" duration-ms="0" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c5 -->
        <test-method status="PASS" signature="z1()[pri:1, instance:com.login.xTest@96532d6]" name="z1" duration-ms="1" started-at="2017-11-16T09:05:13Z" finished-at="2017-11-16T09:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- z1 -->
      </class> <!-- com.login.xTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
